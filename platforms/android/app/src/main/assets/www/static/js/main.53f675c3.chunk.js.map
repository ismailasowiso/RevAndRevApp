{"version":3,"sources":["Images/moon2.png","Images/msgbook.jpeg","Components/FilterLangue.tsx","AppRevRev.tsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FilterLangue","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","className","Langue","Button","variant","xmlns","width","height","fill-rule","stroke-width","fill","d","viewBox","React","Component","AppRevRev","langue","src","moon","alt","msgbook","Components_FilterLangue","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","src_AppRevRev","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53f675c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon2.2e535ff3.png\";","module.exports = __webpack_public_path__ + \"static/media/msgbook.1ac52706.jpeg\";","import React from 'react';\nimport { IFilterLangueProps, IFilterLanguePropsState } from '../Interfaces/IFilterLangueComponent';\nimport Button from 'react-bootstrap/Button';\n\nexport class FilterLangue extends React.Component<IFilterLangueProps, IFilterLanguePropsState>{\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            \n        }\n    }\n    componentDidMount() {\n\n    }\n    render(): JSX.Element {\n        return (\n            <div className='Langue'>\n                {\n                    this.props.Langue==\"\" ? \n                        <div className='LangInit'>\n                            <Button variant=\"outline-success\" className='LangInitFr'>\n                                <div className='LangInitFrImg'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"640\" height=\"480\">\n                                        <g fill-rule=\"evenodd\" stroke-width=\"1pt\">\n                                            <path fill=\"#fff\" d=\"M0 0h640v480H0z\"/>\n                                            <path fill=\"#00267f\" d=\"M0 0h213.337v480H0z\"/>\n                                            <path fill=\"#f31830\" d=\"M426.662 0H640v480H426.662z\"/>\n                                        </g>\n                                    </svg>\n                                </div>\n                                <div className='LangInitFrTxt'>Fran√ßais</div>\n                            </Button>\n                            <Button variant=\"outline-light\" className='LangInitEn'>\n                                <div className='LangInitEnImg'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path fill=\"#f0f0f0\" d=\"M0 85.333h512V426.67H0z\"/>\n                                        <path fill=\"#d80027\" d=\"M288 85.33h-64v138.666H0v64h224v138.666h64V287.996h224v-64H288z\"/>\n                                        <path fill=\"#0052b4\" d=\"M393.785 315.358 512 381.034v-65.676zM311.652 315.358 512 426.662v-31.474l-143.693-79.83zM458.634 426.662l-146.982-81.664v81.664z\"/>\n                                        <path fill=\"#f0f0f0\" d=\"M311.652 315.358 512 426.662v-31.474l-143.693-79.83z\"/>\n                                        <path fill=\"#d80027\" d=\"M311.652 315.358 512 426.662v-31.474l-143.693-79.83z\"/>\n                                        <path fill=\"#0052b4\" d=\"M90.341 315.356 0 365.546v-50.19zM200.348 329.51v97.151H25.491z\"/>\n                                        <path fill=\"#d80027\" d=\"M143.693 315.358 0 395.188v31.474l200.348-111.304z\"/>\n                                        <path fill=\"#0052b4\" d=\"M118.215 196.634 0 130.958v65.676zM200.348 196.634 0 85.33v31.474l143.693 79.83zM53.366 85.33l146.982 81.664V85.33z\"/>\n                                        <path fill=\"#f0f0f0\" d=\"M200.348 196.634 0 85.33v31.474l143.693 79.83z\"/>\n                                        <path fill=\"#d80027\" d=\"M200.348 196.634 0 85.33v31.474l143.693 79.83z\"/>\n                                        <path fill=\"#0052b4\" d=\"M421.659 196.636 512 146.446v50.19zM311.652 182.482V85.331h174.857z\"/>\n                                        <path fill=\"#d80027\" d=\"M368.307 196.634 512 116.804V85.33L311.652 196.634z\"/>\n                                    </svg>\n                                </div>\n                                <div className='LangInitEnTxt'>Anglais</div>\n                            </Button>\n                            <Button variant=\"outline-danger\" className='LangInitAr'>\n                                <div className='LangInitArImg'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path fill=\"#f0f0f0\" d=\"M0 85.337h512v341.326H0z\"/>\n                                        <path d=\"M0 85.337h512v113.775H0z\"/>\n                                        <path fill=\"#496e2d\" d=\"M0 312.888h512v113.775H0z\"/>\n                                        <path fill=\"#d80027\" d=\"M256 256.006 0 426.668V85.331zM305.716 256c0-19.892 13.98-36.51 32.649-40.587a41.66 41.66 0 0 0-8.904-.966c-22.95 0-41.553 18.603-41.553 41.553s18.603 41.553 41.553 41.553c3.058 0 6.035-.339 8.904-.966-18.669-4.077-32.649-20.695-32.649-40.587z\"/>\n                                        <path fill=\"#d80027\" d=\"m340.112 229.287 5.894 18.14h19.072l-15.43 11.211 5.894 18.139-15.43-11.21-15.431 11.21 5.895-18.139-15.431-11.211h19.072z\"/>\n                                    </svg>\n                                </div>\n                                <div className='LangInitArTxt'>Arabe</div>\n                            </Button>\n                        </div> :\n                    <div className='LangChang'></div>\n\n                }\n            \n            </div>\n        );\n    }\n}\n\nexport default FilterLangue;","import React from 'react';\nimport logo from './logo.svg';\nimport moon from './Images/moon2.png';\nimport msgbook from './Images/msgbook.jpeg';\nimport './App.css';\nimport { IAppRevRevPropsState } from './Interfaces/IRevRevApp';\nimport { TOMES } from './Mocks/Data';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FilterLangue from './Components/FilterLangue';\n\nexport class AppRevRev extends React.Component<{}, IAppRevRevPropsState>{\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            langue:\"\"\n        }\n    }\n    componentDidMount() {\n\n    }\n    render(): JSX.Element {\n        return (\n            <div className=\"background-container\">\n                <img className='moon' src={moon} alt=\"moon\"/>\n                <img className='msgbook' src={msgbook} alt=\"msgbook\"/>\n                <div className=\"stars\"></div>\n                <div className=\"twinkling\"></div>\n                <div className=\"clouds\"></div>\n                <FilterLangue Langue={this.state.langue} />\n            </div>\n        );\n    }\n}\n\nexport default AppRevRev;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport AppRevRev from './AppRevRev';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<AppRevRev />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}